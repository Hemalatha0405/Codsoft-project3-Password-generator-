import tkinter as tk
from tkinter import messagebox
import random
import string

class PasswordGeneratorApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Password Generator")
        self.root.geometry("400x350")
        self.create_widgets()
    
    def create_widgets(self):
        # Title Section
        self.create_title_section()

        # Settings Section
        self.create_settings_section()

        # Password Display Section
        self.create_password_display_section()

        # Generate Button
        self.create_generate_button()

    def create_title_section(self):
        title_frame = tk.Frame(self.root, bg="#add8e6")
        title_frame.pack(fill=tk.X)
        title_label = tk.Label(title_frame, text="Password Generator", bg="#add8e6", font=("Helvetica", 16, "bold"))
        title_label.pack(pady=10)

    def create_settings_section(self):
        settings_frame = tk.Frame(self.root, bg="#d3d3d3")
        settings_frame.pack(fill=tk.X, pady=10, padx=10)
        
        length_label = tk.Label(settings_frame, text="Password Length:", bg="#d3d3d3", font=("Helvetica", 12))
        length_label.grid(row=0, column=0, padx=5, pady=5)
        
        self.length_entry = tk.Entry(settings_frame, font=("Helvetica", 12))
        self.length_entry.grid(row=0, column=1, padx=5, pady=5)
        
        self.include_uppercase = tk.BooleanVar()
        self.include_numbers = tk.BooleanVar()
        self.include_symbols = tk.BooleanVar()
        
        self.uppercase_check = tk.Checkbutton(settings_frame, text="Include Uppercase", variable=self.include_uppercase, bg="#d3d3d3", font=("Helvetica", 12))
        self.uppercase_check.grid(row=1, column=0, padx=5, pady=5)
        
        self.numbers_check = tk.Checkbutton(settings_frame, text="Include Numbers", variable=self.include_numbers, bg="#d3d3d3", font=("Helvetica", 12))
        self.numbers_check.grid(row=1, column=1, padx=5, pady=5)
        
        self.symbols_check = tk.Checkbutton(settings_frame, text="Include Symbols", variable=self.include_symbols, bg="#d3d3d3", font=("Helvetica", 12))
        self.symbols_check.grid(row=2, column=0, padx=5, pady=5)

    def create_password_display_section(self):
        password_frame = tk.Frame(self.root, bg="#90ee90")
        password_frame.pack(fill=tk.X, pady=10, padx=10)
        
        self.password_display = tk.Entry(password_frame, font=("Helvetica", 12), bg="white", fg="black", state="readonly")
        self.password_display.pack(pady=10, padx=10, fill=tk.X)

    def create_generate_button(self):
        generate_button = tk.Button(self.root, text="Generate Password", bg="#add8e6", font=("Helvetica", 12, "bold"), command=self.generate_password)
        generate_button.pack(pady=10)

    def generate_password(self):
        try:
            length = int(self.length_entry.get())
            if length < 1:
                raise ValueError
        except ValueError:
            messagebox.showerror("Invalid Input", "Please enter a valid number for password length.")
            return
        
        characters = string.ascii_lowercase
        if self.include_uppercase.get():
            characters += string.ascii_uppercase
        if self.include_numbers.get():
            characters += string.digits
        if self.include_symbols.get():
            characters += string.punctuation
        
        if not characters:
            messagebox.showerror("Invalid Selection", "Please select at least one character type.")
            return
        
        password = ''.join(random.choice(characters) for _ in range(length))
        self.password_display.config(state="normal")
        self.password_display.delete(0, tk.END)
        self.password_display.insert(0, password)
        self.password_display.config(state="readonly")

if __name__ == "__main__":
    root = tk.Tk()
    app = PasswordGeneratorApp(root)
    root.mainloop()
